11.交换
eg：小美是一所中学的信息科技老师，她有一张 seat 座位表，平时用来储存学生名字和与他们相对应的座位 id。
    其中纵列的 id 是连续递增的小美想改变相邻俩学生的座位。

seat表：
+---------+---------+
|    id   | student |
+---------+---------+
|    1    | Abbot   |
|    2    | Doris   |
|    3    | Emerson |
|    4    | Green   |
|    5    | Jeames  |
+---------+---------+
注：如果学生人数是奇数，则不需要改变最后一个同学的座位。

期望结果：
+---------+---------+
|    id   | student |
+---------+---------+
|    1    | Doris   |
|    2    | Abbot   |
|    3    | Green   |
|    4    | Emerson |
|    5    | Jeames  |
+---------+---------+

方法一：不交换student，交换id
SELECT (
    CASE
        WHEN MOD(id,2) = 1 AND id = (SELECT MAX(id) FROM seat) THEN id
        WHEN MOD(id,2) = 1 THEN id+1
        ELSE id-1
    END
    ) AS id,student
FROM seat
ORDER BY id;

方法二：
SELECT
    IF((MOD(id,2) = 1 AND id = (SELECT MAX(id) FROM seat)),id,IF(MOD(id,2) = 1,id+1,id-1))
    AS id,student
FROM seat
ORDER BY id;
----------------------------------------------------------分割线---------------------------------------------------------

12.排序
eg：编写一个 SQL 查询来实现分数排名。如果两个分数相同，则两个分数排名（Rank）相同。
    请注意，平分后的下一个名次应该是下一个连续的整数值。换句话说，名次之间不应该有“间隔”。

score表：
+----+-------+
| Id | Score |
+----+-------+
| 1  | 3.50  |
| 2  | 3.65  |
| 3  | 4.00  |
| 4  | 3.85  |
| 5  | 4.00  |
| 6  | 3.65  |
+----+-------+

期望结果：
+-------+------+
| Score | Rank |
+-------+------+
| 4.00  | 1    |
| 4.00  | 1    |
| 3.85  | 2    |
| 3.65  | 3    |
| 3.65  | 3    |
| 3.50  | 4    |
+-------+------+

方法：count(distinct 列名)作用：去重，只包括列名指定列，返回指定列的不同值的记录数
SELECT Score,
    (
        SELECT COUNT(DISTINCT score)
        FROM Scores
        WHERE score >=S.score
    ) AS Rank
FROM Scores AS S
ORDER BY Score DESC;
----------------------------------------------------------分割线---------------------------------------------------------

13.查询
eg：编写一个 SQL 查询，查找所有至少连续出现三次的数字。

Logs表：
+----+-----+
| Id | Num |
+----+-----+
| 1  |  1  |
| 2  |  1  |
| 3  |  1  |
| 4  |  2  |
| 5  |  1  |
| 6  |  2  |
| 7  |  2  |
+----+-----+

期望结果：连续出现至少三次的数字是1
+-----------------+
| ConsecutiveNums |
+-----------------+
| 1               |
+-----------------+

方法：
SELECT DISTINCT
    l1.Num AS ConsecutiveNums
FROM
    Logs l1,
    Logs l2,
    Logs l3
WHERE
    l1.Id = l2.Id - 1
    AND l2.Id = l3.Id - 1
    AND l1.Num = l2.Num
    AND l2.Num = l3.Num;
